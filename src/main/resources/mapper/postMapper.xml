<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.positionback.mapper.post.PostMapper">

    <insert id="insert" parameterType="postVO">
        INSERT INTO tbl_post (id, member_id, post_title, post_content, post_read_count, created_date, updated_date)
        VALUES (#{id}, #{memberId}, #{postTitle}, #{postContent}, #{postReadCount}, current_timestamp, current_timestamp)
    </insert>

    <select id="selectById" resultType="postDTO" parameterType="Long">
        SELECT
        p.id,
        p.member_id ,
        m.member_nickname ,
        p.post_title ,
        p.post_content ,
        p.post_read_count ,
        p.created_date ,
        p.updated_date
        FROM tbl_post p
        INNER JOIN tbl_member m ON p.member_id = m.id
        WHERE p.id = #{id}
    </select>

    <select id="selectAll" resultType="postDTO">
        SELECT
        p.id,
        p.member_id ,
        m.member_nickname ,
        p.post_title ,
        p.post_content,
        p.post_read_count,
        p.created_date,
        p.updated_date
        FROM tbl_post p
        INNER JOIN tbl_member m ON p.member_id = m.id
        <where>
            <if test="search.keyword != null">
                AND (p.post_title LIKE CONCAT('%', #{search.keyword}, '%')
                OR p.post_content LIKE CONCAT('%', #{search.keyword}, '%'))
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="pagination.order == '최신순'">p.created_date DESC</when>
            <when test="pagination.order == '조회수순'">p.post_read_count DESC</when>
            <when test="pagination.order == '댓글많은순'">p.post_comment_count DESC</when>
            <otherwise>p.created_date DESC</otherwise>
        </choose>
        LIMIT #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <select id="selectFilterAll" resultType="com.app.positionback.domain.post.PostDTO">
        SELECT
        p.id,
        p.member_id ,
        m.member_nickname,
        p.post_title,
        p.post_content,
        p.post_read_count,
        p.created_date,
        p.updated_date,
        IFNULL(r.reply_count, 0) as postReplyCount
        FROM tbl_post p
        INNER JOIN tbl_member m ON p.member_id = m.id
        LEFT JOIN (
        SELECT post_id, COUNT(*) as reply_count
        FROM tbl_reply
        GROUP BY post_id
        ) r ON p.id = r.post_id
        <where>
            <if test="search.keyword != null and search.keyword != ''">
                AND (p.post_title LIKE CONCAT('%', #{search.keyword}, '%')
                OR p.post_content LIKE CONCAT('%', #{search.keyword}, '%'))
            </if>
        </where>
        ORDER BY
        <choose>
            <when test="pagination.order == '최신순'">p.created_date DESC</when>
            <when test="pagination.order == '조회수순'">p.post_read_count DESC</when>
            <when test="pagination.order == '댓글 많은 순'">postReplyCount DESC</when>
            <otherwise>p.created_date DESC</otherwise>
        </choose>
        LIMIT #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <select id="selectTotalWithSearch" resultType="int">
        SELECT COUNT(*)
        FROM tbl_post
        <where>
            <if test="search.keyword != null">
                AND (post_title LIKE CONCAT('%', #{search.keyword}, '%') OR post_content LIKE CONCAT('%', #{search.keyword}, '%'))
            </if>
        </where>
    </select>

    <select id="selectCount" resultType="int">
        SELECT COUNT(*) FROM tbl_post
    </select>

    <update id="update" parameterType="postVO">
        UPDATE tbl_post
        SET post_title = #{postTitle}, post_content = #{postContent}, post_read_count = #{postReadCount}, updated_date = current_timestamp
        WHERE id = #{id}
    </update>

    <update id="incrementReadCount" parameterType="Long">
        UPDATE tbl_post
        SET post_read_count = post_read_count + 1,
            updated_date = current_timestamp
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="Long">
        DELETE FROM tbl_post WHERE id = #{id}
    </delete>

</mapper>



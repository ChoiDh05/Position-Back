<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.positionback.mapper.corporation.CorporationMapper">

    <insert id="insert">
         insert into tbl_corporation(corporation_name, corporation_address, corporation_address_detail, corporation_employees_number, corporation_owner, corporation_email, corporation_password, corporation_homepage, corporation_gen, corporation_sales, corporation_code)
         values (#{corporationName}, #{corporationAddress}, #{corporationAddressDetail}, #{corporationEmployeesNumber}, #{corporationOwner},
                 #{corporationEmail}, #{corporationPassword}, #{corporationHomepage}, #{corporationGen}, #{corporationSales}, #{corporationCode})
    </insert>

    <select id="selectLastInsertId" resultType="long">
        select last_insert_id()
    </select>

    <select id="selectCountByCorporationEmail" resultType="_int">
        select count(*) from tbl_corporation where corporation_email = #{corporationEmail}
    </select>

    <select id="selectByCorporationEmailAndCorporationPassword">
        select id, corporation_name, corporation_address, corporation_address_detail, corporation_employees_number, corporation_sales,
               corporation_owner, corporation_email, corporation_password, corporation_homepage, corporation_read_count, created_date,
               updated_date, corporation_gen, corporation_code
        from tbl_corporation
        where corporation_email = #{corporationEmail} and corporation_password = #{corporationPassword}
    </select>

    <select id="selectApplyByCorporationId">
        select
            c.corporation_name ,
            n.notice_title ,
            m.member_name ,
            m.member_email,
            m.member_nickname,
            r.id ,
            a.apply_type ,
            a.apply_status ,
            n.notice_career ,
            n.notice_education ,
            n.notice_work_start_date ,
            n.notice_work_end_date ,
            n.notice_work_start_time ,
            n.notice_work_end_time ,
            n.notice_end_date ,
            n.notice_job_category_name
        from
            tbl_apply a
        join
            tbl_notice n on a.notice_id = n.id
        join
            tbl_corporation c on n.corporation_id = c.id
        join
            tbl_resume r on a.resume_id = r.id
        join
            tbl_member m on r.member_id = m.id
        where
            c.id = #{corporationId}
        <if test="pagination.status == 'closed'">
            <![CDATA[ and notice_end_date <= current_date ]]>
        </if>
        <if test="pagination.status == 'ongoing'">
            <![CDATA[ and notice_end_date > current_date ]]>
        </if>
        order by
        <choose>
            <when test="pagination.order == 'recent'.toString()">id</when>
            <otherwise>notice_end_date</otherwise>
        </choose>
        desc
        limit #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <select id="selectCount">
        select count(*)
        from
        tbl_apply a
        join
        tbl_notice n on a.notice_id = n.id
        join
        tbl_corporation c on n.corporation_id = c.id
        join
        tbl_resume r on a.resume_id = r.id
        join
        tbl_member m on r.member_id = m.id
        where
        c.id = #{corporationId}
        <if test="pagination.status == 'closed'">
            <![CDATA[ and n.notice_end_date <= current_date ]]>
        </if>
        <if test="pagination.status == 'ongoing'">
            <![CDATA[ and n.notice_end_date > current_date ]]>
        </if>
    </select>
</mapper>
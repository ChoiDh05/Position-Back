<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.positionback.mapper.notice.NoticeMapper">
    <insert id="insertNotice">
        insert into tbl_notice (corporation_id, notice_title, notice_career, notice_education, notice_end_date, notice_work_start_time,notice_work_end_time, notice_work_start_date, notice_work_end_date, notice_job_category_name)
        values (#{corporationId}, #{noticeTitle}, #{noticeCareer}, #{noticeEducation}, #{noticeEndDate}, #{noticeWorkStartTime}, #{noticeWorkEndTime}, #{noticeWorkStartDate}, #{noticeWorkEndDate} ,#{noticeJobCategoryName})
    </insert>

    <!-- 마지막으로 삽입된 ID를 가져오는 쿼리 -->
    <select id="getLastInsertId" resultType="long">
        select last_insert_id()
    </select>

    <update id="updateNotice">
        update tbl_notice
        set corporation_id = #{corporationId},
        notice_title = #{noticeTitle},
        notice_career = #{noticeCareer},
        notice_education = #{noticeEducation},
        notice_end_date = #{noticeEndDate},
        notice_work_start_time = #{noticeWorkStartTime},
        notice_work_end_time = #{noticeWorkEndTime},
        notice_work_start_date = #{noticeWorkStartDate},
        notice_work_end_date = #{noticeWorkEndDate},
        updated_date = #{updatedDate}
        where id = #{id}
    </update>

    <delete id="deleteNotice">
        delete from tbl_notice
        where id = #{id}
    </delete>

    <select id="selectNoticeById" resultType="com.app.positionback.domain.notice.NoticeDTO">
        select id, corporation_id, notice_title, notice_career, notice_education, notice_end_date,
         notice_work_start_time, notice_work_end_time,
        notice_work_start_date, notice_work_end_date, notice_job_category_name
        from tbl_notice
        where id = #{id}
    </select>

    <select id="selectNoticesByCorporationId" resultType="com.app.positionback.domain.notice.NoticeDTO">
        select id, corporation_id, notice_title,notice_career, notice_education, notice_end_date, created_date, updated_date, notice_work_start_date, notice_work_end_date, notice_work_start_time, notice_work_end_time, notice_job_category_name
        from tbl_notice
        where corporation_id = #{corporationId}
        <if test="pagination.status == 'closed'">
            <![CDATA[ and notice_end_date <= current_date ]]>
        </if>
        <if test="pagination.status == 'ongoing'">
            <![CDATA[ and notice_end_date > current_date ]]>
        </if>
        order by
        <choose>
            <when test="pagination.order == 'recent'.toString()">id</when>
            <otherwise>notice_end_date</otherwise>
        </choose>
        desc
        limit #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <select id="selectCount">
        select count(*) from tbl_notice
        where corporation_id = #{corporationId}
        <if test="pagination.status == 'closed'">
            <![CDATA[ and notice_end_date <= current_date
        ]]></if>
        <if test="pagination.status == 'ongoing'">
            <![CDATA[ and notice_end_date > current_date
        ]]></if>
    </select>

<!--    카테고리 상위 4개 -->
    <select id="selectTopJobCategories">
        select notice_job_category_name, count(*) as count
        from tbl_notice
        where notice_job_category_name is not null
        <![CDATA[
          and notice_end_date <= current_date
        ]]>
        group by notice_job_category_name
        order by count desc
        limit 4
    </select>

<!--    월별 채용 순위-->
    <select id="selectMonthRank">
        select date_format(created_date, '%m'), count(*) as count
        from tbl_notice
        group by date_format(created_date, '%m')
        order by count desc
        limit 4
    </select>

</mapper>

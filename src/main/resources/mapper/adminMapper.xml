<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.positionback.mapper.admin.AdminMapper">
    <!-- 회원 관리 -->
    <!-- 일반 회원 목록 -->
    <sql id="MemberSearch">
        <where>
            <if test="search.keyword != null and search.keyword != ''">
                and (
                member_name like concat('%', #{search.keyword}, '%')
                or member_email like concat('%', #{search.keyword}, '%')
                or member_address like concat('%', #{search.keyword}, '%')
                or member_phone like concat('%', #{search.keyword}, '%')
                )
            </if>
        </where>
    </sql>

    <select id="selectAllMembers" resultType="memberDTO">
        select id,
        member_name,
        coalesce(member_email, member_kakao_email) as memberEmail,
        member_address,
        member_phone,
        member_status,
        created_date
        from tbl_member
        <include refid="MemberSearch"/>
        <choose>
            <when test="search.types[0] == 'recent'">
                order by created_date desc
            </when>
            <when test="search.types[0] == 'active'">
                order by (member_status = '활동중') desc, created_date desc
            </when>
            <when test="search.types[0] == 'suspended'">
                order by (member_status = '정지') desc, created_date desc
            </when>
            <when test="search.types[0] == 'withdrawn'">
                order by (member_status = '탈퇴') desc, created_date desc
            </when>
            <otherwise>
                order by created_date desc
            </otherwise>
        </choose>
        limit #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <select id="selectMemberTotal">
        select count(*) from tbl_member
    </select>

    <select id="selectTotalWithMemberSearch">
        select count(*) from tbl_member
        <include refid="MemberSearch"/>
    </select>

    <!-- 기업 회원 목록 페이징 -->
    <sql id="CorporationSearch">
        <where>
            <if test="search.keyword != null and search.keyword != ''">
                and (
                corporation_name like concat('%', #{search.keyword}, '%')
                or corporation_email like concat('%', #{search.keyword}, '%')
                or corporation_address like concat('%', #{search.keyword}, '%')
                or corporation_gen like concat('%', #{search.keyword}, '%')
                or corporation_code like concat('%', #{search.keyword}, '%')
                )
            </if>
        </where>
    </sql>

    <select id="selectAllCorporationMembers" resultType="corporationDTO">
        select id,
               corporation_name,
               corporation_address,
               corporation_email,
               corporation_gen,
               corporation_code,
               created_date
        from tbl_corporation
        <include refid="CorporationSearch"/>
        order by created_date desc
        limit #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <select id="selectCorporationTotal">
        select count(*) from tbl_corporation
    </select>
    
    <select id="selectTotalWithCorporationSearch">
        select count(*) from tbl_corporation
        <include refid="CorporationSearch"/>
    </select>

    <!-- 문의 관리 -->

    <!-- 일반 문의 목록 페이징 -->
    <select id="selectAllMemberInquiry" resultType="inquiryDTO">
        SELECT id,
               inquiry_type,
               inquiry_category,
               inquiry_title,
               inquiry_content,
               created_date AS createdDate,
               updated_date AS updatedDate,
               CASE
                   WHEN member_email IS NOT NULL THEN member_email
                   ELSE member_kakao_email
                   END AS memberEmail
        FROM tbl_inquiry
        WHERE inquiry_type = '개인'
        ORDER BY createdDate DESC
            LIMIT #{pagination.startRow}, #{pagination.rowCount}
    </select>

    <!-- 기업 문의 목록 페이징 -->
    <select id="selectAllCorporationInquiry" resultType="inquiryDTO">
        SELECT id,
               inquiry_type,
               inquiry_category,
               inquiry_title,
               inquiry_content,
               created_date AS createdDate,
               updated_date AS updatedDate,
               CASE
                   WHEN member_email IS NOT NULL THEN member_email
                   ELSE member_kakao_email
                   END AS memberEmail
        FROM tbl_inquiry
        WHERE inquiry_type = '기업'
        ORDER BY createdDate DESC
            LIMIT #{pagination.startRow}, #{pagination.rowCount}
    </select>

<!--    <select id="selectAllApply" resultType="ApplyDTO">-->
<!--        select apply.id, apply.apply_type, apply.apply_status, apply.created_date,-->
<!--               c.corporation_name, n.notice_title-->
<!--        from tbl_apply apply-->
<!--                 join tbl_notice n on apply.notice_id = n.id-->
<!--                 join tbl_corporation c on n.corporation_id = c.id-->
<!--        order by apply.created_date desc-->
<!--    </select>-->

</mapper>
